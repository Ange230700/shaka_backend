# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_DATABASE: shaka_test
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -proot --silent || exit 1"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    env:
      NODE_ENV: test
      FRONT_API_BASE_URL: http://localhost:5173
      # ‚úÖ USE HOST + MAPPED PORT (since steps run on the host)
      DATABASE_URL: mysql://root:root@127.0.0.1:3306/shaka_test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Wait for MySQL health
        shell: bash
        run: |
          set -e
          CID="${{ job.services.mysql.id }}"
          echo "Waiting for mysql container ($CID) to be healthy..."
          for i in {1..60}; do
            STATUS="$(docker inspect --format='{{.State.Health.Status}}' "$CID" || echo starting)"
            echo "  status: $STATUS"
            if [ "$STATUS" = "healthy" ]; then
              echo "MySQL is healthy"
              break
            fi
            sleep 2
          done

      - name: Apply schema (shakadb)
        shell: bash
        env:
          # üîí Double-ensure the CLI sees the host DSN
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/shaka_test
        run: |
          set -euxo pipefail

          SCHEMA_PATH="node_modules/shakadb/prisma/schema.prisma"
          ALT_SCHEMA_PATH="node_modules/shakadb/dist/prisma/schema.prisma"

          ls -la node_modules/shakadb || true
          ls -la node_modules/shakadb/prisma || true
          ls -la node_modules/shakadb/dist/prisma || true

          if [ -f "$SCHEMA_PATH" ]; then
            PRISMA_SCHEMA="$SCHEMA_PATH"
          elif [ -f "$ALT_SCHEMA_PATH" ]; then
            PRISMA_SCHEMA="$ALT_SCHEMA_PATH"
          else
            echo "‚ùå Could not find shakadb Prisma schema"
            exit 1
          fi

          echo "‚úÖ Using Prisma schema: $PRISMA_SCHEMA"
          # Prisma 5.x aligns with many published libs
          npx prisma@^5 db push --schema "$PRISMA_SCHEMA" --accept-data-loss --skip-generate

      - name: Seed test DB
        run: npm run seed:test

      - name: Build
        run: npm run build

      - name: Lint
        run: npm run lint

      - name: Unit tests
        run: npm run test

      - name: E2E tests
        run: npm run test:e2e
