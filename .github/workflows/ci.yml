# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_DATABASE: shaka_test
          MYSQL_ROOT_PASSWORD: root
          # ❌ DO NOT set MYSQL_USER=root (invalid for official image)
          # Optional but harmless if you prefer older auth:
          # MYSQL_ROOT_HOST: "%"
        # No host port mapping needed; job can reach service via hostname "mysql"
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -proot --silent || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      NODE_ENV: test
      FRONT_API_BASE_URL: http://localhost:5173
      # ✅ Use service hostname
      DATABASE_URL: mysql://root:root@127.0.0.1:3306/shaka_test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: npm

      - name: Install dependencies
        run: npm ci

      # Healthcheck already waits, but a tiny extra wait loop is fine:
      - name: Wait for MySQL (mysqladmin ping)
        shell: bash
        run: |
          for i in {1..60}; do
            (echo > /dev/tcp/127.0.0.1/3306) >/dev/null 2>&1 && echo "MySQL is up" && break
            echo "Waiting for MySQL... ($i/60)"
            sleep 2
          done

      # Apply shakadb schema (use migrate if available; fall back to push)
      - name: Apply schema (shakadb)
        shell: bash
        run: |
          set -euxo pipefail

          SCHEMA_PATH="node_modules/shakadb/prisma/schema.prisma"
          ALT_SCHEMA_PATH="node_modules/shakadb/dist/prisma/schema.prisma"

          # Show what shakadb shipped
          ls -la node_modules/shakadb || true
          ls -la node_modules/shakadb/prisma || true
          ls -la node_modules/shakadb/dist/prisma || true

          if [ -f "$SCHEMA_PATH" ]; then
            PRISMA_SCHEMA="$SCHEMA_PATH"
          elif [ -f "$ALT_SCHEMA_PATH" ]; then
            PRISMA_SCHEMA="$ALT_SCHEMA_PATH"
          else
            echo "❌ Could not find shakadb Prisma schema at $SCHEMA_PATH or $ALT_SCHEMA_PATH"
            exit 1
          fi

          echo "✅ Using Prisma schema: $PRISMA_SCHEMA"

          # Create/align tables in shaka_test
          npx prisma@^6 db push --schema "$PRISMA_SCHEMA" --accept-data-loss
      - name: Seed test DB
        run: npm run seed:test

      - name: Build
        run: npm run build

      - name: Lint
        run: npm run lint

      - name: Unit tests
        run: npm run test

      - name: E2E tests
        run: npm run test:e2e
